// 解构赋值 剖析对象或数组   声明和赋值放到一起
// 解构表示等号左边右边结构类似
// 数组的位置必须相同

// let arr = ['vesper', 9]
// let name = arr[0]
// let age = arr[1]

// --------------------------------------------------------------------------------------------------------
let [name, age] = ['vesper', 9]
console.log(name, age)
// 只想要某一个,其他可以为空
let [, age] = ['vesper', 9]
console.log(age)

// --------------------------------------------------------------------------------------------------------
// 拿到数组的长度,把数组当作一个对象拿到属性,对象解构时名字必须相同,有相同的属性
let { length } = ['vesper', 9]
console.log(length)
// --------------------------------------------------------------------------------------------------------
// 关键字不能拿来声明,可以取个别名, 用 : 改名
let { name, age, default: d } = { name: 'vesper', age: 9, default: 'xxxx' }
console.log(d)
// --------------------------------------------------------------------------------------------------------
// 取数组的2
let [, { address: [, a,] }] = [
  { name: 'one' },
  { age: 9, address: [1, 2, 3] },
]
console.log(a)
// --------------------------------------------------------------------------------------------------------
// 取一个没有的属性,可以设置默认值,用 = 赋值
let [, { address: [, a,] }, hobby = 'swim'] = [
  { name: 'one' },
  { age: 9, address: [1, 2, 3] },
]
console.log(hobby)
// --------------------------------------------------------------------------------------------------------
//解构的应用
function ajax ({ url = new Error('url notdefined'), type = 'get', data = {} }) {
  console.log(url, type, data)
}
ajax({
  url: '/test',
  type: 'post',
  data: { arr: [] }
})

// -------------------------------------------------------------------------------------------------------
function test () {
  return [1, 2, 3]
}
let [a, b, c] = test()
console.log(a, b, c)





